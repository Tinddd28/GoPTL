basePath: /
definitions:
  handler.ErrorResponse:
    properties:
      message:
        type: string
    type: object
  handler.Login:
    properties:
      email:
        type: string
      password:
        type: string
    required:
    - email
    - password
    type: object
  models.Network:
    properties:
      network_code:
        type: string
      network_name:
        type: string
    required:
    - network_code
    - network_name
    type: object
  models.PassReset:
    properties:
      email:
        type: string
    required:
    - email
    type: object
  models.Password:
    properties:
      confirm_password:
        type: string
      new_password:
        type: string
      old_password:
        type: string
    required:
    - confirm_password
    - new_password
    - old_password
    type: object
  models.Project:
    properties:
      amount:
        type: number
      cost_per_token:
        type: number
      description:
        type: string
      image:
        type: string
      title:
        type: string
      token_title:
        type: string
    required:
    - amount
    - cost_per_token
    - description
    - title
    - token_title
    type: object
  models.SetUnlockToken:
    properties:
      id:
        type: integer
      unlocked_token:
        type: integer
    required:
    - id
    - unlocked_token
    type: object
  models.User:
    properties:
      country:
        type: string
      email:
        type: string
      lastname:
        type: string
      name:
        type: string
    required:
    - country
    - email
    - lastname
    - name
    type: object
  models.WalletForProject:
    properties:
      address:
        type: string
      network_id:
        type: integer
      project_id:
        type: integer
    required:
    - address
    - network_id
    - project_id
    type: object
  models.WalletForResponse:
    properties:
      address:
        type: string
      balance:
        type: number
      id:
        type: integer
      network_id:
        type: integer
      project_id:
        type: integer
      user_id:
        type: integer
    required:
    - address
    - network_id
    type: object
  models.WalletForUser:
    properties:
      address:
        type: string
      network_id:
        type: integer
    required:
    - address
    - network_id
    type: object
host: 0.0.0.0:8000
info:
  contact: {}
  description: This is a backend for PrimeTokenList.
  title: GoPTL API
  version: "1"
paths:
  /auth/login:
    post:
      consumes:
      - application/json
      description: login models
      operationId: login
      parameters:
      - description: email and password
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/handler.Login'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
      summary: Login
      tags:
      - auth
  /auth/register:
    post:
      consumes:
      - application/json
      description: register new models
      operationId: create-account
      parameters:
      - description: models info
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/models.User'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
      summary: Register
      tags:
      - auth
  /networks/{id}:
    delete:
      description: delete network
      operationId: delete-network
      parameters:
      - description: network id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Delete network
      tags:
      - network
  /networks/all:
    get:
      description: get all networks
      operationId: get-networks
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Network'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
      summary: Get networks
      tags:
      - network
  /networks/create:
    post:
      consumes:
      - application/json
      description: create new network
      operationId: create-network
      parameters:
      - description: network info
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/models.Network'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Create network
      tags:
      - network
  /password/change:
    patch:
      consumes:
      - application/json
      description: change password
      operationId: change-password
      parameters:
      - description: password info
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/models.Password'
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Change password
      tags:
      - password
  /password/reset:
    post:
      consumes:
      - application/json
      description: reset password
      operationId: reset-password
      parameters:
      - description: email
        in: body
        name: email
        required: true
        schema:
          $ref: '#/definitions/models.PassReset'
      produces:
      - application/json
      responses:
        "200":
          description: Password has been reset
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
      summary: Reset password
      tags:
      - password
  /projects/{id}:
    delete:
      description: delete project
      operationId: delete-project
      parameters:
      - description: Project id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Delete project
      tags:
      - projects
    get:
      description: get project by id
      operationId: get-project-by-id
      parameters:
      - description: Project id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Project'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
      summary: Get project by id
      tags:
      - projects
    put:
      consumes:
      - multipart/form-data
      description: update project
      operationId: update-project
      parameters:
      - description: Project id
        in: path
        name: id
        required: true
        type: integer
      - description: Project title
        in: formData
        name: title
        required: true
        type: string
      - description: Project description
        in: formData
        name: description
        required: true
        type: string
      - description: Token title
        in: formData
        name: token_title
        required: true
        type: string
      - description: Amount of tokens
        in: formData
        name: amount
        required: true
        type: number
      - description: Cost per token
        in: formData
        name: cost_per_token
        required: true
        type: number
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Update project
      tags:
      - projects
  /projects/all:
    get:
      description: get projects
      operationId: get-projects
      parameters:
      - description: offest
        in: query
        name: offset
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Project'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
      summary: Get projects
      tags:
      - projects
  /projects/create:
    post:
      consumes:
      - multipart/form-data
      description: Create a new project with title, description, token title, amount,
        cost per token, and an image.
      parameters:
      - description: Project title
        in: formData
        name: title
        required: true
        type: string
      - description: Project description
        in: formData
        name: description
        required: true
        type: string
      - description: Token title
        in: formData
        name: token_title
        required: true
        type: string
      - description: Amount of tokens
        in: formData
        name: amount
        required: true
        type: number
      - description: Cost per token
        in: formData
        name: cost_per_token
        required: true
        type: number
      - description: Project image file
        in: formData
        name: image
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Project'
        "400":
          description: Invalid request data
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Create a new project
      tags:
      - projects
  /projects/set_unlock_token:
    post:
      consumes:
      - application/json
      description: set amount of unlocked token
      operationId: set-unlock-token
      parameters:
      - description: amount tokens
        in: body
        name: token
        required: true
        schema:
          $ref: '#/definitions/models.SetUnlockToken'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
      security:
      - ApiKeyAuth: []
      tags:
      - projects
  /user:
    get:
      description: get user info
      operationId: get-user
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Get user
      tags:
      - user
    put:
      consumes:
      - application/json
      description: update user info
      operationId: update-user
      parameters:
      - description: user info
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/models.User'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Update user
      tags:
      - user
  /user/verification:
    post:
      description: send verification code
      operationId: verification
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Verification
      tags:
      - user
  /user/verification_accept:
    get:
      description: apply verification code
      operationId: apply-verification
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Apply verification
      tags:
      - user
  /wallets/all:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.WalletForResponse'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Get Wallets
      tags:
      - wallets
  /wallets/balance:
    get:
      consumes:
      - application/json
      description: get balance
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Get Balance
      tags:
      - wallets
  /wallets/create_for_project:
    post:
      consumes:
      - application/json
      description: create wallet for project
      parameters:
      - description: wallet info
        in: body
        name: wallet
        required: true
        schema:
          $ref: '#/definitions/models.WalletForProject'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Create wallet for project
      tags:
      - wallets
  /wallets/create_for_user:
    post:
      consumes:
      - application/json
      description: create wallet for user
      parameters:
      - description: wallet info
        in: body
        name: wallet
        required: true
        schema:
          $ref: '#/definitions/models.WalletForUser'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Create wallet for user
      tags:
      - wallets
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
