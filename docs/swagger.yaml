basePath: /
definitions:
  handler.ErrorResponse:
    properties:
      message:
        type: string
    type: object
  handler.Login:
    properties:
      email:
        type: string
      password:
        type: string
    required:
    - email
    - password
    type: object
  models.User:
    properties:
      country:
        type: string
      email:
        type: string
      lastname:
        type: string
      name:
        type: string
    required:
    - country
    - email
    - lastname
    - name
    type: object
host: localhost:8080
info:
  contact: {}
  description: This is a backend for PrimeTokenList.
  title: GoPTL API
  version: "1"
paths:
  /auth/login:
    post:
      consumes:
      - application/json
      description: login models
      operationId: login
      parameters:
      - description: email and password
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/handler.Login'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
      summary: Login
      tags:
      - auth
  /auth/register:
    post:
      consumes:
      - application/json
      description: register new models
      operationId: create-account
      parameters:
      - description: models info
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/models.User'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
      summary: Register
      tags:
      - auth
  /user:
    get:
      consumes:
      - application/json
      description: get user info
      operationId: get-user
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Get user
      tags:
      - user
    put:
      consumes:
      - application/json
      description: update user info
      operationId: update-user
      parameters:
      - description: user info
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/models.User'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Update user
      tags:
      - user
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
